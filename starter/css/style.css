/*CSS Reset*/
* {
    /*ブラウザが要素に適用する可能性のあるデフォルトのマージンとパディングがリセット*/
    margin: 0;
    padding: 0;

    /*
    要素のパディングとボーダーが要素の指定された幅と高さに含まれるようになる
    レイアウトの予測がしやすくなる
    */
    box-sizing: border-box;
}

body {
    font-family: 'Noto Sans JP', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

.header {
    height: 95vh;
    background-image: linear-gradient(
            to right bottom,
            rgba(126, 213, 111, 0.8),
            rgba(40, 180, 131, 0.8)),
    url(../img/hero.jpg);

    /*背景画像を要素内に完全に収め、且つ、アスペクト比を維持し、画像が要素をカバーするように*/
    background-size: cover;

    /*要素の上部に背景画像を配置*/
    background-position: top;

    /*https://developer.mozilla.org/ja/docs/Web/CSS/position*/
    position: relative;

    /*
    https://bennettfeely.com/clippy/
    切り取りパスを使用して、要素の形を変更する
    */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

/*ページの左上角にロゴを配置する*/
.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
}

.text-box {
    /*要素をその親要素の中心に配置*/
    position: absolute;
    top: 40%;
    left: 50%;
    /*要素はその自身の幅の50%分左に、高さの50%分上に移動*/
    transform: translate(-50%, -50%);

    text-align: center;
}

.heading-primary {
    color: #fff;
    /*テキストを全て大文字に変換*/
    text-transform: uppercase;

    /*
    ユーザーに対して裏を向いたとき、背面が可視になります。
    https://developer.mozilla.org/ja/docs/Web/CSS/backface-visibility
    */
    backface-visibility: hidden;

    margin-bottom: 60px;
}

.heading-primary-main {
    /*新しい行から始まり、次の要素も新しい行から始まるように*/
    display: block;
    font-size: 60px;
    font-weight: 400;

    /*文字間（文字と文字の間のスペース）を35ピクセルに設定します。*/
    letter-spacing: 35px;

    /*アニメーションの名前を指定します。この名前は、@keyframesルールで定義*/
    animation-name: moveInLeft;

    /*アニメーションの持続時間*/
    animation-duration: 1s;

    /*アニメーションの速度カーブを指定します。'ease-out'は、アニメーションがゆっくりと終了*/
    animation-timing-function: ease-out;


    /*
    アニメーションが3回繰り返される
    animation-iteration-count: 3;

    アニメーションが始まるまでの遅延時間を3秒に設定
    animation-delay: 3s;
    */

}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17px;

    /*
    持続時間は1秒、そしてタイミング関数は'ease-out'（アニメーションが終了に向かってゆっくりと減速する）
    */
    animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {

    /*初期状態（0%）では、要素は完全に透明（opacity: 0）*/
    /*左側（-100pxだけをX軸方向に移動）から表示が開始されます。*/
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    /*
    初期状態（0%）では、要素は完全に透明（opacity: 0）
    右側（100pxだけをX軸方向に移動）から表示が開始されます。
    */
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    /*80%の時点では、要素は左側に移動します*/
    80% {
        transform: translateX(10px);
    }

    /*要素は完全に不透明になり（opacity: 1）、その位置は元の位置（translate(0)）に戻ります*/
    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
   0%{
        opacity: 0; /* 要素を透明にする */
        transform: translateY(30px); /* 要素を下に30px移動する */
    }

    100% {
        opacity: 1; /* 要素を不透明にする */
        transform: translate(0); /* 要素を元の位置に戻す */
   }
}

/*未訪問のリンク要素にスタイルを適用*/
.btn:link,
    /*ユーザーが既に訪れたことのあるリンク要素にスタイルを適用*/
.btn:visited {
    text-transform: uppercase; /* テキストを大文字に変換 */
    text-decoration: none; /* テキストの下線を削除 */
    padding: 15px 40px; /* ボタンの内側の余白を設定 */
    display: inline-block; /* インラインブロック要素として表示 */
    border-radius: 100px; /* ボーダーラジウスを設定して円形のボタンにする */
    transition: all .2s; /* すべてのプロパティに対して変化を0.2秒かけて行う */
    position: relative; /* 要素を絶対位置に配置 */
}

.btn:hover {
    transform: translateY(-3px); /* ホバー時に上に3px移動するアニメーション効果 */
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2); /* ホバー時に影を付ける */
}

.btn:active {
    transform: translateY(-1px); /* クリック時に少し上に移動するアニメーション効果 */
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2); /* クリック時に影を付ける */
}

.btn-white {
    background-color: #ffffff;
    color: #777;
}

.btn:after {
    content: ""; /* 仮想要素にコンテンツを設定せず、空の内容とします */
    display: inline-block;
    /* インラインブロック要素として表示
    要素がボタンの内部に配置され、ボタンの高さと幅に合わせて表示
     */
    height: 100%; /* 要素の高さを100%にする */
    width: 100%; /* 要素の幅を100%にする */
    border-radius: 100px; /* ボーダーラジウスを設定して円形のボタンにする */

    position: absolute; /* 要素を絶対位置に配置 */
    top: 0; /* 要素をボタンの上端に配置 */
    left: 0; /* 要素をボタンの左端に配置 */
    z-index: -1; /* 要素をボタンよりも下に配置 */

    transition: all .4s; /* すべてのプロパティに対して変化を0.4秒かけて行う */
}

.btn-white:after {
    background-color: #ffffff;
}

.btn:hover:after {
    transform: scaleX(1.4) scaleY(1.6); /* ホバー時にボタンの幅を1.4倍、高さを1.6倍にする */
    opacity: 0; /* ホバー時に要素を透明にする */
}

.btn-animated {
    animation: moveInBottom .5s ease-out .75s; /* アニメーションを0.5秒かけて行う */
    animation-fill-mode: backwards; /* アニメーションが終了したときに、要素をアニメーション前の状態に戻す */
}