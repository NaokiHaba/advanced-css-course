* {
    margin: 0; /* 要素の外側の余白を0にする */
    padding: 0; /* 要素の内側の余白を0にする */
    box-sizing: border-box; /* 要素の幅と高さにボーダーとパディングを含める */
}

body {
    font-family: 'Noto Sans JP', sans-serif; /* フォントを設定 */
    font-weight: 400; /* フォントの太さを設定 */
    font-size: 16px; /* フォントサイズを設定 */
    line-height: 1.7; /* 行の高さを設定 */
    color: #777; /* テキストの色を設定 */
    padding: 30px; /* ページの上下左右の余白を設定 */
}

.header {
    height: 95vh; /* ヘッダーの高さを設定(vhはビューポートの高さに対する割合) */
    background-image: linear-gradient(/* 背景にグラデーションを設定 */ to right bottom, /* グラデーションの方向を右下に設定 */ rgba(126, 213, 111, 0.8), /* グラデーションの開始色を設定 */ rgba(40, 180, 131, 0.8)), /* グラデーションの終了色を設定 */ url(../img/hero.jpg); /* 背景画像を設定 */
    background-size: cover; /* 背景画像をカバーするように設定 */
    background-position: top; /* 背景画像を上部に配置するように設定 */
    position: relative; /* 要素をその現在の位置から上下左右に移動させる */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /* 多角形のクリッピング領域を指定  */
}

.logo-box {
    position: absolute; /* 要素を絶対位置(指定した位置に固定)に配置 */
    top: 40px; /* 要素を上から40pxの位置に配置 */
    left: 40px; /* 要素を左から40pxの位置に配置 */
}

.logo {
    height: 35px;
}

.text-box {
    position: absolute; /* 要素を絶対位置(指定した位置に固定)に配置 */
    top: 40%; /* 要素を上から40%の位置に配置 */
    left: 50%; /* 要素を左から50%の位置に配置 */
    transform: translate(-50%, -50%); /* 要素を左上を基準に左右に50%、上下に50%移動 */
    text-align: center; /* テキストを中央揃えにする */
}

.heading-primary {
    color: #fff;
    text-transform: uppercase; /* テキストを大文字に変換 */
    backface-visibility: hidden; /* 要素の裏面を非表示にする */
    margin-bottom: 60px; /* 要素の下側の余白を60pxにする */
}

.heading-primary-main {
    /**
    要素をブロック要素として表示
    その要素が新しい行から始まり、横幅が親要素に合わせて広がり、独自の高さを持ち、余白を持つ
     */
    display: block;
    font-size: 60px; /* フォントサイズを60pxにする */
    font-weight: 400; /* フォントの太さを400にする */
    letter-spacing: 35px; /* 文字間の余白を35pxにする */
    animation-name: moveInLeft; /* アニメーションを設定 */
    animation-duration: 1s; /* アニメーションの持続時間を1秒に設定 */
    animation-timing-function: ease-out; /* アニメーションが開始時に速く進み、終了時にゆっくりと停止する */


    /*
    animation-iteration-count: 3; //アニメーションの繰り返し回数を設定
    animation-delay: 3s; //アニメーションの開始を3秒遅らせる
    */
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17px;
    animation: moveInRight 1s ease-out; /*アニメーション名 接続時間 タイミング */
}

/* アニメーションのキーフレーム  */
@keyframes moveInLeft {
    /*初期状態（0%）では、要素は完全に透明（opacity: 0）*/
    0% {
        opacity: 0; /* 透明度を0に設定（要素が不透明でない） */
        transform: translateX(-100px); /* 左から-100px移動 */
    }

    /*80%の時点では、要素は右側に移動します*/
    80% {
        transform: translateX(10px); /* 左から10px移動 */
    }

    /*要素は完全に不透明になり（opacity: 1）、その位置は元の位置（translate(0)）に戻ります*/
    100% {
        opacity: 1; /* 透明度を1に設定（要素が完全に不透明になる） */
        transform: translate(0); /* 移動しない（元の位置に戻る） */
    }
}

@keyframes moveInRight {
    /*
    初期状態（0%）では、要素は完全に透明（opacity: 0）
    右側（100pxだけをX軸方向に移動）から表示が開始されます。
    */
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    /*80%の時点では、要素は左側に移動します*/
    80% {
        transform: translateX(10px);
    }

    /*要素は完全に不透明になり（opacity: 1）、その位置は元の位置（translate(0)）に戻ります*/
    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0; /* 要素を透明にする */
        transform: translateY(30px); /* 要素を下に30px移動する */
    }

    100% {
        opacity: 1; /* 要素を不透明にする */
        transform: translate(0); /* 要素を元の位置に戻す */
    }
}

/*未訪問のリンク要素にスタイルを適用*/
.btn:link,
    /*ユーザーが既に訪れたことのあるリンク要素にスタイルを適用*/
.btn:visited {
    text-transform: uppercase; /* テキストを大文字に変換 */
    text-decoration: none; /* テキストの下線を削除 */
    padding: 15px 40px; /* ボタンの内側の余白を設定 */
    display: inline-block; /* インラインブロック要素として表示 */
    border-radius: 100px; /* ボーダーラジウスを設定して円形のボタンにする */
    transition: all .2s; /* すべてのプロパティに対して変化を0.2秒かけて行う */
    position: relative; /* 要素を絶対位置に配置 */
}

.btn:hover {
    transform: translateY(-3px); /* ホバー時に上に3px移動するアニメーション効果 */
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2); /* ホバー時に影を付ける */
}

.btn:active {
    transform: translateY(-1px); /* クリック時に少し上に移動するアニメーション効果 */
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2); /* クリック時に影を付ける */
}

.btn-white {
    background-color: #ffffff;
    color: #777;
}

.btn:after {
    content: ""; /* 仮想要素にコンテンツを設定せず、空の内容とします */
    display: inline-block;
    /* インラインブロック要素として表示
    要素がボタンの内部に配置され、ボタンの高さと幅に合わせて表示
     */
    height: 100%; /* 要素の高さを100%にする */
    width: 100%; /* 要素の幅を100%にする */
    border-radius: 100px; /* ボーダーラジウスを設定して円形のボタンにする */

    position: absolute; /* 要素を絶対位置に配置 */
    top: 0; /* 要素をボタンの上端に配置 */
    left: 0; /* 要素をボタンの左端に配置 */
    z-index: -1; /* 要素をボタンよりも下に配置 */

    transition: all .4s; /* すべてのプロパティに対して変化を0.4秒かけて行う */
}

.btn-white:after {
    background-color: #ffffff;
}

.btn:hover:after {
    transform: scaleX(1.4) scaleY(1.6); /* ホバー時にボタンの幅を1.4倍、高さを1.6倍にする */
    opacity: 0; /* ホバー時に要素を透明にする */
}

.btn-animated {
    animation: moveInBottom .5s ease-out .75s; /* アニメーションを0.5秒かけて行う */
    animation-fill-mode: backwards; /* アニメーションが終了したときに、要素をアニメーション前の状態に戻す */
}